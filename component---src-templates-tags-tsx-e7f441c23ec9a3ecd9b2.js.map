{"version":3,"sources":["webpack:///./src/templates/tags.tsx"],"names":["Tags","props","pageContext","data","location","tag","allMarkdownRemark","edges","totalCount","tagHeader","title","map","e","slug","node","fields","frontmatter","date","blogPath","split","formattedDate","Date","toDateString","key","to"],"mappings":"4FAAA,gFA0EeA,UAtCkB,SAACC,GAAU,IAClCC,EAAgCD,EAAhCC,YAAaC,EAAmBF,EAAnBE,KAAMC,EAAaH,EAAbG,SACnBC,EAAQH,EAARG,IAFkC,EAGZF,EAAKG,kBAA3BC,EAHkC,EAGlCA,MAAOC,EAH2B,EAG3BA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAGf,OACE,kBAAC,IAAD,CAAQD,SAAUA,GAChB,kBAAC,IAAD,CAAKM,MAAOD,IACZ,kBAAC,IAAD,KAAUA,GACV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGF,EAAMI,KAAI,SAACC,GAAM,IACRC,EAASD,EAAEE,KAAKC,OAAhBF,KADQ,EAEQD,EAAEE,KAAKE,YAAvBN,EAFQ,EAERA,MAAOO,EAFC,EAEDA,KAETC,EAAW,SADND,EAAKE,MAAM,KAAK,GACb,IAAkBN,EAC5BO,EAAwB,GACxBH,IAEFG,EADgB,IAAIC,KAAKJ,GACDK,gBAE1B,OACE,kBAAC,IAAD,CAAcC,IAAKV,GACjB,kBAAC,OAAD,CAAMW,GAAIN,GACR,kBAAC,IAAD,KAAcR,GACd,2BAAIU","file":"component---src-templates-tags-tsx-e7f441c23ec9a3ecd9b2.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { TagProps } from '@types';\nimport {\n  BodyContainer,\n  ListContainer,\n  BlogPostCard,\n  TitleH3,\n  TitleH3Link\n} from '../components/shared/sharedStyles';\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst Tags: React.FC<TagProps> = (props) => {\n  const { pageContext, data, location } = props;\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`;\n  return (\n    <Layout location={location}>\n      <SEO title={tagHeader} />\n      <TitleH3>{tagHeader}</TitleH3>\n      <BodyContainer>\n        <ListContainer>\n          {edges.map((e) => {\n            const { slug } = e.node.fields\n            const { title, date } = e.node.frontmatter\n            const yr = date.split(\"-\")[0];\n            const blogPath = `/blog/${yr}/${slug}`;\n            let formattedDate: string = '';\n            if (date) {\n              const dateObj = new Date(date);\n              formattedDate = dateObj.toDateString();\n            }\n            return (\n              <BlogPostCard key={slug}>\n                <Link to={blogPath}>\n                  <TitleH3Link>{title}</TitleH3Link>\n                  <p>{formattedDate}</p>\n                </Link>\n              </BlogPostCard>\n            )\n          })}\n        </ListContainer>\n      </BodyContainer>\n    </Layout>\n  )\n}\n\nexport default Tags;"],"sourceRoot":""}