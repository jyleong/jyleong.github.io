{"version":3,"sources":["webpack:///./src/components/shared/tags.tsx","webpack:///./src/templates/blog.tsx"],"names":["colors","theme","Tag","styled","div","props","labelGreyishBlue","labelYellow","TagDivs","tags","map","t","idx","key","BlogContent","Blog","useContext","ThemeContext","formattedDate","data","markdownRemark","frontmatter","date","Date","toDateString","title","slug","fields","location","dangerouslySetInnerHTML","__html","html"],"mappings":"6FAAA,qCAIQA,EAJR,UAImBC,EAAXD,OAEFE,EAAMC,IAAOC,IAAV,+DAAGD,CAAH,mFAKa,SAACE,GAAD,MAA2B,SAAhBA,EAAMJ,MAAmBD,EAAOM,iBAAmBN,EAAOO,eAW5EC,IARgB,SAAC,GAAoB,IAAlBC,EAAkB,EAAlBA,KAAMR,EAAY,EAAZA,MACtC,OAAQ,oCACLQ,GAAQA,EAAKC,KAAI,SAACC,EAAWC,GAAZ,OAChB,kBAACV,EAAD,CAAKW,IAAKD,EAAKX,MAAOA,GAAQU,S,kCCjBpC,4FA0BMG,EAAcX,IAAOC,IAAV,oEAAGD,CAAH,8BA4BFY,UAvBmB,SAACV,GAAqB,IAC9CJ,EAAUe,qBAAWC,gBAArBhB,MAEJiB,EAAwB,GACxBb,EAAMc,KAAKC,eAAeC,aAAehB,EAAMc,KAAKC,eAAeC,YAAYC,OAEjFJ,EADO,IAAIK,KAAKlB,EAAMc,KAAKC,eAAeC,YAAYC,MACjCE,gBAN+B,MAQ9BnB,EAAMc,KAAKC,eAAeC,YAA1CI,EAR8C,EAQ9CA,MAAOhB,EARuC,EAQvCA,KACPiB,EAASrB,EAAMc,KAAKC,eAAeO,OAAnCD,KACR,OACE,kBAAC,IAAD,CAAQE,SAAUvB,EAAMuB,UACtB,kBAAC,IAAD,CAAKH,MAAOA,IACZ,kBAACX,EAAD,KACE,4BAAKW,GACK,WAATC,GAAqB,2BAAIR,GAChB,OAATT,GAAiB,kBAAC,IAAD,CAASA,KAAMA,EAAMR,MAAOA,KAEhD,kBAACa,EAAD,CAAae,wBAAyB,CAACC,OAAQzB,EAAMc,KAAKC,eAAeW","file":"component---src-templates-blog-tsx-0ece22f3672651cc4db9.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { theme } from '../../styles';\n\nconst { colors } = theme;\n\nconst Tag = styled.div`\n  display: inline;\n  margin: 2px;\n  padding: 2px;\n  border-radius: 5px;\n  background-color: ${(props) => props.theme === 'dark' ? colors.labelGreyishBlue : colors.labelYellow};\n`;\n\nconst TagDivs: React.FC<any> = ({ tags, theme }) => {\n  return (<>\n    {tags && tags.map((t: string, idx: number) => (\n      <Tag key={idx} theme={theme}>{t}</Tag>\n    ))}\n  </>);\n};\n\nexport default TagDivs;","import React, { useContext } from 'react';\nimport { graphql } from 'gatsby';\n\nimport styled from 'styled-components';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport TagDivs from '../components/shared/tags';\nimport { ThemeContext } from '../context/theme';\nimport { PostProps } from '../types';\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug }}) {\n      frontmatter {\n        title\n        date\n        tags\n      }\n      fields {\n        slug\n      }\n      html\n    }\n  }\n`;\n\nconst BlogContent = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst Blog: React.FC<PostProps> = (props: PostProps) => {\n  const { theme } = useContext(ThemeContext);\n  let date: Date;\n  let formattedDate: string = '';\n  if (props.data.markdownRemark.frontmatter && props.data.markdownRemark.frontmatter.date) {\n    date = new Date(props.data.markdownRemark.frontmatter.date);\n    formattedDate = date.toDateString();\n  }\n  const { title, tags } = props.data.markdownRemark.frontmatter;\n  const { slug } = props.data.markdownRemark.fields;\n  return (\n    <Layout location={props.location}>\n      <SEO title={title}/>\n      <BlogContent>\n        <h2>{title}</h2>\n        {slug !== 'resume' && <p>{formattedDate}</p>}\n        {tags !== null && <TagDivs tags={tags} theme={theme}/>}\n      </BlogContent>\n      <BlogContent dangerouslySetInnerHTML={{__html: props.data.markdownRemark.html}}></BlogContent>\n    </Layout>\n  )\n};\n\nexport default Blog;\n\n"],"sourceRoot":""}