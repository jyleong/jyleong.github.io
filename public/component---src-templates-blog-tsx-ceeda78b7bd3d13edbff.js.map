{"version":3,"sources":["webpack:///./src/components/shared/tags.tsx","webpack:///./src/templates/blog.tsx","webpack:///./src/components/shared/sharedStyles.ts"],"names":["theme","colors","TagDivs","tags","map","t","idx","key","BlogContent","styled","div","Blog","props","useContext","ThemeContext","formattedDate","data","markdownRemark","frontmatter","date","Date","toDateString","title","slug","fields","location","dangerouslySetInnerHTML","__html","html","ThemeStyle","BodyContainer","mixins","flexCenter","ListContainer","BlogPostCard","divShadow","TitleH1","h1","TitleH3","h3","TitleH3Link","inlineLink","Tag","labelGreyishBlue","labelYellow"],"mappings":"6FAAA,iDAKmBA,IAAXC,OAUOC,IARgB,SAAC,GAAoB,IAAlBC,EAAkB,EAAlBA,KAAMH,EAAY,EAAZA,MACtC,OAAQ,oCACLG,GAAQA,EAAKC,KAAI,SAACC,EAAWC,GAAZ,OAChB,kBAAC,IAAD,CAAKC,IAAKD,EAAKN,MAAOA,GAAQK,S,kCCVpC,4FA0BMG,EAAcC,IAAOC,IAAV,oEAAGD,CAAH,8BA4BFE,UAvBmB,SAACC,GAAqB,IAC9CZ,EAAUa,qBAAWC,gBAArBd,MAEJe,EAAwB,GACxBH,EAAMI,KAAKC,eAAeC,aAAeN,EAAMI,KAAKC,eAAeC,YAAYC,OAEjFJ,EADO,IAAIK,KAAKR,EAAMI,KAAKC,eAAeC,YAAYC,MACjCE,gBAN+B,MAQ9BT,EAAMI,KAAKC,eAAeC,YAA1CI,EAR8C,EAQ9CA,MAAOnB,EARuC,EAQvCA,KACPoB,EAASX,EAAMI,KAAKC,eAAeO,OAAnCD,KACR,OACE,kBAAC,IAAD,CAAQE,SAAUb,EAAMa,UACtB,kBAAC,IAAD,CAAKH,MAAOA,IACZ,kBAACd,EAAD,KACE,4BAAKc,GACK,WAATC,GAAqB,2BAAIR,GAChB,OAATZ,GAAiB,kBAAC,IAAD,CAASA,KAAMA,EAAMH,MAAOA,KAEhD,kBAACQ,EAAD,CAAakB,wBAAyB,CAACC,OAAQf,EAAMI,KAAKC,eAAeW,W,oCCjD/E,0QAIQ3B,EAAW4B,IAAX5B,OAEK6B,EAAgBrB,IAAOC,IAAV,8EAAGD,CAAH,SACtBsB,IAAOC,YAGEC,EAAgBxB,IAAOC,IAAV,8EAAGD,CAAH,gBAIbyB,EAAezB,IAAOC,IAAV,6EAAGD,CAAH,SACrBsB,IAAOI,WAGEC,EAAU3B,IAAO4B,GAAV,wEAAG5B,CAAH,wBAIP6B,EAAU7B,IAAO8B,GAAV,wEAAG9B,CAAH,wBAIP+B,EAAc/B,IAAO8B,GAAV,4EAAG9B,CAAH,SACpBsB,IAAOU,YAGEC,EAAMjC,IAAOC,IAAV,oEAAGD,CAAH,mFAKM,SAACG,GAAD,MAA2B,SAAhBA,EAAMZ,MAAmBC,EAAO0C,iBAAmB1C,EAAO2C","file":"component---src-templates-blog-tsx-ceeda78b7bd3d13edbff.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { theme } from '../../styles';\nimport { Tag } from './sharedStyles';\n\nconst { colors } = theme;\n\nconst TagDivs: React.FC<any> = ({ tags, theme }) => {\n  return (<>\n    {tags && tags.map((t: string, idx: number) => (\n      <Tag key={idx} theme={theme}>{t}</Tag>\n    ))}\n  </>);\n};\n\nexport default TagDivs;","import React, { useContext } from 'react';\nimport { graphql } from 'gatsby';\n\nimport styled from 'styled-components';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport TagDivs from '../components/shared/tags';\nimport { ThemeContext } from '../context/theme';\nimport { PostProps } from '@types';\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug }}) {\n      frontmatter {\n        title\n        date\n        tags\n      }\n      fields {\n        slug\n      }\n      html\n    }\n  }\n`;\n\nconst BlogContent = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst Blog: React.FC<PostProps> = (props: PostProps) => {\n  const { theme } = useContext(ThemeContext);\n  let date: Date;\n  let formattedDate: string = '';\n  if (props.data.markdownRemark.frontmatter && props.data.markdownRemark.frontmatter.date) {\n    date = new Date(props.data.markdownRemark.frontmatter.date);\n    formattedDate = date.toDateString();\n  }\n  const { title, tags } = props.data.markdownRemark.frontmatter;\n  const { slug } = props.data.markdownRemark.fields;\n  return (\n    <Layout location={props.location}>\n      <SEO title={title}/>\n      <BlogContent>\n        <h2>{title}</h2>\n        {slug !== 'resume' && <p>{formattedDate}</p>}\n        {tags !== null && <TagDivs tags={tags} theme={theme}/>}\n      </BlogContent>\n      <BlogContent dangerouslySetInnerHTML={{__html: props.data.markdownRemark.html}}></BlogContent>\n    </Layout>\n  )\n};\n\nexport default Blog;\n\n","import styled from 'styled-components';\n\nimport { theme as ThemeStyle, mixins } from '../../styles';\n\nconst { colors } = ThemeStyle;\n\nexport const BodyContainer = styled.div`\n  ${mixins.flexCenter};\n`;\n\nexport const ListContainer = styled.div`\n  width: 70%;\n`;\n\nexport const BlogPostCard = styled.div`\n  ${mixins.divShadow};\n`;\n\nexport const TitleH1 = styled.h1`\n  text-align: center;\n`;\n\nexport const TitleH3 = styled.h3`\n  text-align: center;\n`;\n\nexport const TitleH3Link = styled.h3`\n  ${mixins.inlineLink};\n`;\n\nexport const Tag = styled.div`\n  display: inline;\n  margin: 2px;\n  padding: 2px;\n  border-radius: 5px;\n  background-color: ${(props) => props.theme === 'dark' ? colors.labelGreyishBlue : colors.labelYellow};\n`;"],"sourceRoot":""}