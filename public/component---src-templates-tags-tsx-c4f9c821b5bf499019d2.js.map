{"version":3,"sources":["webpack:///./src/templates/tags.tsx","webpack:///./src/components/shared/sharedStyles.ts"],"names":["Tags","props","pageContext","data","location","tag","allMarkdownRemark","edges","totalCount","tagHeader","title","map","e","slug","node","fields","frontmatter","date","formattedDate","Date","toDateString","key","to","colors","ThemeStyle","BodyContainer","styled","div","mixins","flexCenter","ListContainer","BlogPostCard","divShadow","TitleH1","h1","TitleH3","h3","TitleH3Link","inlineLink","Tag","theme","labelGreyishBlue","labelYellow"],"mappings":"4FAAA,gFAwEeA,UApCkB,SAACC,GAAU,IAClCC,EAAgCD,EAAhCC,YAAaC,EAAmBF,EAAnBE,KAAMC,EAAaH,EAAbG,SACnBC,EAAQH,EAARG,IAFkC,EAGZF,EAAKG,kBAA3BC,EAHkC,EAGlCA,MAAOC,EAH2B,EAG3BA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAGf,OACE,kBAAC,IAAD,CAAQD,SAAUA,GAChB,kBAAC,IAAD,CAAKM,MAAOD,IACZ,kBAAC,IAAD,KAAUA,GACV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGF,EAAMI,KAAI,SAACC,GAAM,IACRC,EAASD,EAAEE,KAAKC,OAAhBF,KADQ,EAEQD,EAAEE,KAAKE,YAAvBN,EAFQ,EAERA,MAAOO,EAFC,EAEDA,KACXC,EAAwB,GACxBD,IAEFC,EADgB,IAAIC,KAAKF,GACDG,gBAE1B,OACE,kBAAC,IAAD,CAAcC,IAAKR,GACjB,kBAAC,OAAD,CAAMS,GAAIT,GACR,kBAAC,IAAD,KAAcH,GACd,2BAAIQ,a,oCC7DtB,0QAIQK,EAAWC,IAAXD,OAEKE,EAAgBC,IAAOC,IAAV,8EAAGD,CAAH,SACtBE,IAAOC,YAGEC,EAAgBJ,IAAOC,IAAV,8EAAGD,CAAH,gBAIbK,EAAeL,IAAOC,IAAV,6EAAGD,CAAH,SACrBE,IAAOI,WAGEC,EAAUP,IAAOQ,GAAV,wEAAGR,CAAH,wBAIPS,EAAUT,IAAOU,GAAV,wEAAGV,CAAH,wBAIPW,EAAcX,IAAOU,GAAV,4EAAGV,CAAH,SACpBE,IAAOU,YAGEC,EAAMb,IAAOC,IAAV,oEAAGD,CAAH,mFAKM,SAACzB,GAAD,MAA2B,SAAhBA,EAAMuC,MAAmBjB,EAAOkB,iBAAmBlB,EAAOmB","file":"component---src-templates-tags-tsx-c4f9c821b5bf499019d2.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { TagProps } from '@types';\nimport {\n  BodyContainer,\n  ListContainer,\n  BlogPostCard,\n  TitleH3,\n  TitleH3Link\n} from '../components/shared/sharedStyles';\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst Tags: React.FC<TagProps> = (props) => {\n  const { pageContext, data, location } = props;\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`;\n  return (\n    <Layout location={location}>\n      <SEO title={tagHeader} />\n      <TitleH3>{tagHeader}</TitleH3>\n      <BodyContainer>\n        <ListContainer>\n          {edges.map((e) => {\n            const { slug } = e.node.fields\n            const { title, date } = e.node.frontmatter\n            let formattedDate: string = '';\n            if (date) {\n              const dateObj = new Date(date);\n              formattedDate = dateObj.toDateString();\n            }\n            return (\n              <BlogPostCard key={slug}>\n                <Link to={slug}>\n                  <TitleH3Link>{title}</TitleH3Link>\n                  <p>{formattedDate}</p>\n                </Link>\n              </BlogPostCard>\n            )\n          })}\n        </ListContainer>\n      </BodyContainer>\n    </Layout>\n  )\n}\n\nexport default Tags;","import styled from 'styled-components';\n\nimport { theme as ThemeStyle, mixins } from '../../styles';\n\nconst { colors } = ThemeStyle;\n\nexport const BodyContainer = styled.div`\n  ${mixins.flexCenter};\n`;\n\nexport const ListContainer = styled.div`\n  width: 70%;\n`;\n\nexport const BlogPostCard = styled.div`\n  ${mixins.divShadow};\n`;\n\nexport const TitleH1 = styled.h1`\n  text-align: center;\n`;\n\nexport const TitleH3 = styled.h3`\n  text-align: center;\n`;\n\nexport const TitleH3Link = styled.h3`\n  ${mixins.inlineLink};\n`;\n\nexport const Tag = styled.div`\n  display: inline;\n  margin: 2px;\n  padding: 2px;\n  border-radius: 5px;\n  background-color: ${(props) => props.theme === 'dark' ? colors.labelGreyishBlue : colors.labelYellow};\n`;"],"sourceRoot":""}