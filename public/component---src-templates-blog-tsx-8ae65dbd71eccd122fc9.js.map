{"version":3,"sources":["webpack:///./src/components/shared/tags.tsx","webpack:///./src/components/social/sharingBar.tsx","webpack:///./src/templates/blog.tsx"],"names":["theme","colors","TagDivs","tags","map","t","idx","key","SharingContainer","styled","div","LineBreak","hr","BoldDiv","SharingBar","location","title","href","fbUrl","twitterUrl","emailUrl","inUrl","whatsAppUrl","target","rel","BlogContent","Blog","props","useContext","ThemeContext","formattedDate","data","markdownRemark","frontmatter","date","Date","toDateString","slug","fields","dangerouslySetInnerHTML","__html","html"],"mappings":"6FAAA,iDAKmBA,IAAXC,OAUOC,IARgB,SAAC,GAAoB,IAAlBC,EAAkB,EAAlBA,KAAMH,EAAY,EAAZA,MACtC,OAAQ,oCACLG,GAAQA,EAAKC,KAAI,SAACC,EAAWC,GAAZ,OAChB,kBAAC,IAAD,CAAKC,IAAKD,EAAKN,MAAOA,GAAQK,S,sJCJ9BG,EAAmBC,IAAOC,IAAV,mFAAGD,CAAH,uEAOhBE,EAAYF,IAAOG,GAAV,4EAAGH,CAAH,iBAITI,EAAUJ,IAAOC,IAAV,0EAAGD,CAAH,uBAuEEK,EAnEc,SAAC,GAA6B,IAA3BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,MAChCC,EAASF,EAATE,KACFC,EAAQ,yCAAyCD,EACjDE,EAAa,iCAAiCF,EAC9CG,EAAW,mBAAmBJ,EAAtB,8BAAyDC,EACjEI,EAAQ,6CAA6CJ,EACrDK,EAAc,sCAAsCN,EAAzC,IAAkDC,EAEnE,OACE,oCACA,kBAACN,EAAD,MACA,kBAACE,EAAD,yBACA,kBAACL,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACES,KAAME,EACNI,OAAO,SACPC,IAAI,gCAEJ,kBAAC,IAAD,QAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEP,KAAMC,EACNK,OAAO,SACPC,IAAI,gCAEJ,kBAAC,IAAD,QAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEP,KAAMG,EACNG,OAAO,SACPC,IAAI,gCAEJ,kBAAC,IAAD,QAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEP,KAAMI,EACNE,OAAO,SACPC,IAAI,gCAEJ,kBAAC,IAAD,QAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEP,KAAMK,EACNC,OAAO,SACPC,IAAI,gCAEJ,kBAAC,IAAD,UAKR,kBAACb,EAAD,Q,YCvDEc,EAAchB,IAAOC,IAAV,oEAAGD,CAAH,8BA+BFiB,UA1BmB,SAACC,GAAqB,IAC9C3B,EAAU4B,qBAAWC,gBAArB7B,MAEJ8B,EAAwB,GACxBH,EAAMI,KAAKC,eAAeC,aAAeN,EAAMI,KAAKC,eAAeC,YAAYC,OAEjFJ,EADO,IAAIK,KAAKR,EAAMI,KAAKC,eAAeC,YAAYC,MACjCE,gBAN+B,MAQ9BT,EAAMI,KAAKC,eAAeC,YAA1CjB,EAR8C,EAQ9CA,MAAOb,EARuC,EAQvCA,KACPkC,EAASV,EAAMI,KAAKC,eAAeM,OAAnCD,KACR,OACE,kBAAC,IAAD,CAAQtB,SAAUY,EAAMZ,UACtB,kBAAC,IAAD,CAAKC,MAAOA,IACZ,kBAACS,EAAD,KACE,4BAAKT,GACK,WAATqB,GAAqB,2BAAIP,GAChB,OAAT3B,GAAiB,kBAAC,IAAD,CAASA,KAAMA,EAAMH,MAAOA,KAEhD,kBAACyB,EAAD,CAAac,wBAAyB,CAACC,OAAQb,EAAMI,KAAKC,eAAeS,QACzE,kBAAChB,EAAD,KACE,kBAAC,EAAD,CAAYT,MAAOA,EAAOD,SAAUY,EAAMZ","file":"component---src-templates-blog-tsx-8ae65dbd71eccd122fc9.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { theme } from '../../styles';\nimport { Tag } from './sharedStyles';\n\nconst { colors } = theme;\n\nconst TagDivs: React.FC<any> = ({ tags, theme }) => {\n  return (<>\n    {tags && tags.map((t: string, idx: number) => (\n      <Tag key={idx} theme={theme}>{t}</Tag>\n    ))}\n  </>);\n};\n\nexport default TagDivs;","import React from 'react';\nimport styled from 'styled-components';\nimport { FaTwitter, FaFacebookSquare, FaLinkedin, FaWhatsapp } from 'react-icons/fa';\nimport { HiOutlineMail } from 'react-icons/hi';\nimport { SocialItems, SocialItem, SocialLink } from '../shared/sharedStyles';\n\nconst SharingContainer = styled.div`\n  margin: 0 auto;\n  display: flex;\n  justify-content: left;\n  align-items: left;\n`;\n\nconst LineBreak = styled.hr`\n  width: 100%;\n`;\n\nconst BoldDiv = styled.div`\n  font-weight: bold;\n`;\n\nconst SharingBar: React.FC = ({ location, title }: any) => {\n  const { href } = location;\n  const fbUrl = `https://www.facebook.com/sharer.php?u=${href}`;\n  const twitterUrl = `https://twitter.com/share?url=${href}`;\n  const emailUrl = `mailto:?subject=${title}&body=Check out this site: ${href}`;\n  const inUrl = `https://www.linkedin.com/shareArticle?url=${href}`;\n  const whatsAppUrl = `https://api.whatsapp.com/send?text=${title} ${href}`;\n  \n  return (\n    <>\n    <LineBreak />\n    <BoldDiv>Share this post!</BoldDiv>\n    <SharingContainer>\n      <SocialItems>\n        <SocialItem>\n          <SocialLink\n            href={twitterUrl}\n            target=\"_blank\"\n            rel=\"nofollow noopener noreferrer\"\n          >\n            <FaTwitter />\n          </SocialLink>\n        </SocialItem>\n        <SocialItem>\n          <SocialLink\n            href={fbUrl}\n            target=\"_blank\"\n            rel=\"nofollow noopener noreferrer\"\n          >\n            <FaFacebookSquare />\n          </SocialLink>\n        </SocialItem>\n        <SocialItem>\n          <SocialLink\n            href={emailUrl}\n            target=\"_blank\"\n            rel=\"nofollow noopener noreferrer\"\n          >\n            <HiOutlineMail />\n          </SocialLink>\n        </SocialItem>\n        <SocialItem>\n          <SocialLink\n            href={inUrl}\n            target=\"_blank\"\n            rel=\"nofollow noopener noreferrer\"\n          >\n            <FaLinkedin />\n          </SocialLink>\n        </SocialItem>\n        <SocialItem>\n          <SocialLink\n            href={whatsAppUrl}\n            target=\"_blank\"\n            rel=\"nofollow noopener noreferrer\"\n          >\n            <FaWhatsapp />\n          </SocialLink>\n        </SocialItem>\n      </SocialItems>\n    </SharingContainer>\n    <LineBreak />\n    </>\n\n  )\n}\n\nexport default SharingBar;\n","import React, { useContext } from 'react';\nimport { graphql } from 'gatsby';\n\nimport styled from 'styled-components';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport TagDivs from '../components/shared/tags';\nimport SharingBar from '../components/social/sharingBar';\nimport { ThemeContext } from '../context/theme';\nimport { PostProps } from '@types';\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug }}) {\n      frontmatter {\n        title\n        date\n        tags\n      }\n      fields {\n        slug\n      }\n      html\n    }\n  }\n`;\n\nconst BlogContent = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst Blog: React.FC<PostProps> = (props: PostProps) => {\n  const { theme } = useContext(ThemeContext);\n  let date: Date;\n  let formattedDate: string = '';\n  if (props.data.markdownRemark.frontmatter && props.data.markdownRemark.frontmatter.date) {\n    date = new Date(props.data.markdownRemark.frontmatter.date);\n    formattedDate = date.toDateString();\n  }\n  const { title, tags } = props.data.markdownRemark.frontmatter;\n  const { slug } = props.data.markdownRemark.fields;\n  return (\n    <Layout location={props.location}>\n      <SEO title={title}/>\n      <BlogContent>\n        <h2>{title}</h2>\n        {slug !== 'resume' && <p>{formattedDate}</p>}\n        {tags !== null && <TagDivs tags={tags} theme={theme}/>}\n      </BlogContent>\n      <BlogContent dangerouslySetInnerHTML={{__html: props.data.markdownRemark.html}}></BlogContent>\n      <BlogContent>\n        <SharingBar title={title} location={props.location}/>\n      </BlogContent>\n    </Layout>\n  )\n};\n\nexport default Blog;\n\n"],"sourceRoot":""}